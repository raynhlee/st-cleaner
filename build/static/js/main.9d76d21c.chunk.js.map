{"version":3,"sources":["api/index.js","components/Posts/AddPost.js","components/Header.js","components/Home.js","components/Login.js","components/Register.js","components/Posts/Post.js","components/Posts/Message.js","components/Posts/EditPost.js","components/helpers/AppBarWithSearch.js","components/Posts/ViewPosts.js","components/helpers/ProfileTab.js","components/Profile.js","index.js"],"names":["BASE_URL","COHORT_NAME","register","username","password","a","fetch","method","headers","body","JSON","stringify","user","response","json","data","login","fetchPosts","results","addPost","token","formData","Authorization","post","fetchMessage","postId","userToken","message","content","fetchEditPost","editTitle","editDescription","editPrice","editLocation","editWillDeliver","title","description","price","location","willDeliver","fetchDelete","initialFormData","Object","freeze","deliver","AddPost","props","useState","updateFormData","loggedIn","setPosts","handleChange","e","value","target","type","checked","trim","name","preventDefault","swal","Promise","all","then","posts","error","console","log","className","placeholder","onChange","onClick","useStyles","makeStyles","theme","root","fontFamily","color","fontSize","marginTop","padding","display","justifyContent","flexDirection","fontWeight","marginLeft","linkColor","textDecoration","Header","setUsername","setPassword","setLoggedIn","history","useHistory","classes","AppBar","position","Toolbar","to","Button","event","localStorage","removeItem","push","styles","top","alignItems","width","height","textAlign","paddingLeft","paddingRight","Home","style","Login","setUserToken","fetchApi","success","setItem","onSubmit","minLength","required","Register","Post","postProps","readOnly","disabled","Message","setMessage","sendMessage","EditPost","setTitle","setDescription","setPrice","setLocation","setDeliver","fontStyle","appBar","maxWidth","margin","paddingTop","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","searchIcon","pointerEvents","inputRoot","inputInput","transition","transitions","create","sectionDesktop","sectionMobile","AppBarWithSearch","searchTerm","setSearchTerm","state","setState","toggleDrawer","anchor","open","key","Typography","variant","noWrap","InputBase","input","inputProps","Drawer","onClose","postsWrapper","icon","verticalAlign","helper","borderLeft","divider","link","ViewPosts","messageState","setMessageState","useEffect","toggleViewPost","toggleMessageDrawer","filteredPosts","filter","text","lowerCaseText","toLowerCase","author","includes","postMatches","displayPosts","map","index","Accordion","AccordionSummary","expandIcon","AccordionDetails","_id","TabPanel","children","other","role","hidden","id","Box","p","background","paper","items","marginBottom","expandedPanel","primary","main","SimpleTabs","myMessages","React","setValue","Tabs","newValue","aria-label","indicatorColor","Tab","label","messages","fromUser","aria-controls","expanded","heading","details","Divider","AccordionActions","size","Profile","setMyMessages","setMyPosts","myPosts","fetchProfile","App","loginKey","getItem","userNameKey","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9d76d21c.chunk.js","sourcesContent":["const BASE_URL = \"https://strangers-things.herokuapp.com\";\nconst COHORT_NAME = \"2301-FTB-PT-WEB-PT\";\n\nexport async function register(username, password) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/api/${COHORT_NAME}/users/register`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password,\n          },\n        }),\n      }\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function login(username, password) {\n  try {\n    const response = await fetch(`${BASE_URL}/api/${COHORT_NAME}/users/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password,\n        },\n      }),\n    });\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchPosts() {\n  try {\n    const response = await fetch(`${BASE_URL}/api/${COHORT_NAME}/posts`);\n    const results = await response.json();\n    return results.data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function addPost(token, formData) {\n  try {\n    const response = await fetch(`${BASE_URL}/api/${COHORT_NAME}/posts`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({ post: formData }),\n    });\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchMessage(postId, userToken, message) {\n  try {\n    const response = await fetch(\n      `https://strangers-things.herokuapp.com/api/2301-FTB-PT-WEB-PT/posts/${postId}/messages`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userToken}`,\n        },\n        body: JSON.stringify({\n          message: {\n            content: `${message}`,\n          },\n        }),\n      }\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchEditPost(\n  postId,\n  userToken,\n  editTitle,\n  editDescription,\n  editPrice,\n  editLocation,\n  editWillDeliver\n) {\n  try {\n    const response = await fetch(\n      `https://strangers-things.herokuapp.com/api/2301-FTB-PT-WEB-PT/posts/${postId}`,\n      {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userToken}`,\n        },\n        body: JSON.stringify({\n          post: {\n            title: `${editTitle}`,\n            description: `${editDescription}`,\n            price: `${editPrice}`,\n            location: `${editLocation}`,\n            willDeliver: `${editWillDeliver}`,\n          },\n        }),\n      }\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchDelete(postId, userToken) {\n  try {\n    const response = await fetch(\n      `https://strangers-things.herokuapp.com/api/2301-FTB-PT-WEB-PT/posts/${postId}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userToken}`,\n        },\n      }\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchProfile(userToken) {\n  try {\n    const response = await fetch(\n      `https://strangers-things.herokuapp.com/api/2301-FTB-PT-WEB-PT/users/me`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${userToken}`,\n        },\n      }\n    );\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n","import React, { useState } from \"react\";\nimport { addPost, fetchPosts } from \"../../api\";\nimport swal from \"sweetalert\";\n\nconst initialFormData = Object.freeze({\n  title: \"\",\n  description: \"\",\n  price: \"\",\n  location: \"\",\n  deliver: false,\n});\n\nconst AddPost = (props) => {\n  const [formData, updateFormData] = useState(initialFormData);\n  const { loggedIn, userToken, setPosts } = props;\n\n  const handleChange = (e) => {\n    const value =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value.trim();\n    updateFormData({\n      ...formData,\n      [e.target.name]: value,\n    });\n  };\n  async function handleSubmit(e) {\n    e.preventDefault();\n    try {\n      await addPost(userToken, formData);\n      swal(\"Success!\");\n      try {\n        Promise.all([fetchPosts()]).then(([data]) => {\n          setPosts(data.posts);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } catch (error) {\n      console.error(error);\n      swal(\"Failed to post, please try again\");\n    }\n  }\n  return (\n    loggedIn && (\n      <div className=\"misc-style\">\n        <h2>Add New Post</h2>\n        <form>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"number\"\n            name=\"price\"\n            placeholder=\"Price\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"location\"\n            placeholder=\"Location\"\n            onChange={handleChange}\n          />\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"deliver\"\n              checked={formData.deliver}\n              onChange={handleChange}\n            />\n            <span>Willing to Deliver?</span>\n          </label>\n\n          <div>\n            <button onClick={handleSubmit}>Submit</button>\n          </div>\n        </form>\n      </div>\n    )\n  );\n};\n\nexport default AddPost;\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: \"Roboto, Helvetica, Arial, sans-serif\",\n    color: \"white\",\n    fontSize: \"20px\",\n    marginTop: \"0\",\n    padding: \"8px\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    fontWeight: \"600\",\n    marginLeft: \"10px\",\n  },\n  linkColor: {\n    color: \"white\",\n    textDecoration: \"none\",\n  },\n}));\n\nexport default function Header({\n  setUsername,\n  setPassword,\n  loggedIn,\n  setLoggedIn,\n}) {\n  const history = useHistory();\n\n  const classes = useStyles();\n  const handleClick = (event) => {\n    event.preventDefault();\n    localStorage.removeItem(`Token`);\n    localStorage.removeItem(`Username`);\n    setLoggedIn(false);\n    setUsername(\"\");\n    setPassword(\"\");\n    history.push(\"/login\");\n  };\n\n  return (\n    <AppBar position=\"absolute\">\n      <Toolbar className={classes.root}>\n        Stranger's Things\n        <Link className={classes.linkColor} to=\"/\">\n          <Button color=\"inherit\">HOME</Button>\n        </Link>\n        {!loggedIn ? null : (\n          <Link className={classes.linkColor} to=\"/profile\">\n            <Button color=\"inherit\">Profile</Button>\n          </Link>\n        )}\n        <Link className={classes.linkColor} to=\"/posts\">\n          <Button color=\"inherit\">POSTS</Button>\n        </Link>\n        {loggedIn ? null : (\n          <Link className={classes.linkColor} to=\"/login\">\n            <Button color=\"inherit\">LOGIN</Button>\n          </Link>\n        )}\n        {!loggedIn ? null : (\n          <Button color=\"inherit\" onClick={handleClick}>\n            Logout\n          </Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from \"react\";\n\nconst styles = {\n  position: \"absolute\",\n  top: 0,\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  width: \"100vw\",\n  height: \"100vh\",\n  textAlign: \"center\",\n  paddingLeft: \"100px\",\n  paddingRight: \"100px\",\n};\n\nconst Home = ({ username, loggedIn }) => {\n  return (\n    <div style={styles}>\n      <div>\n        <h1>Welcome to Stranger's things</h1>\n        {loggedIn ? <h2>You are logged in as {username}</h2> : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport swal from \"sweetalert\";\nimport { login } from \"../api\";\nimport { Link } from \"react-router-dom\";\n\nconst Login = ({\n  username,\n  setUsername,\n  password,\n  setPassword,\n  loggedIn,\n  setUserToken,\n  setLoggedIn,\n  history,\n}) => {\n  const fetchApi = async (event) => {\n    event.preventDefault();\n    try {\n      const data = await login(username, password);\n      if (data.success === false) {\n        swal(data.error.message);\n        setUsername(\"\");\n        setPassword(\"\");\n      } else {\n        const token = data.data.token;\n        localStorage.setItem(`Token`, token);\n        setUserToken(token);\n        setLoggedIn(true);\n        setUsername(username);\n        localStorage.setItem(`Username`, username);\n        history.push(\"/\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  if (loggedIn) {\n    return <div>You are already logged in</div>;\n  } else {\n    return (\n      <div className=\"misc-style\">\n        <h2>Login to your account</h2>\n        <form onSubmit={fetchApi}>\n          <input\n            type=\"text\"\n            minLength=\"6\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n            required\n          />\n          <input\n            type=\"password\"\n            minLength=\"6\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n            required\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <div>\n          <label>Don't have an account? </label>\n          <Link to=\"/register\">Sign up Here</Link>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport swal from \"sweetalert\";\nimport { register } from \"../api\";\n\nconst Register = ({\n  username,\n  setUsername,\n  password,\n  setPassword,\n  setUserToken,\n  setLoggedIn,\n  loggedIn,\n  history,\n}) => {\n  const fetchApi = async (event) => {\n    event.preventDefault();\n    try {\n      const data = await register(username, password);\n      if (data.success === false) {\n        swal(data.error.message);\n        setUsername(\"\");\n        setPassword(\"\");\n      } else {\n        const token = data.data.token;\n        localStorage.setItem(`Token`, token);\n        localStorage.setItem(`Username`, username);\n        setUsername(username);\n        setUserToken(token);\n        setLoggedIn(true);\n        history.push(\"/\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  if (loggedIn) {\n    return <div>You are already logged in</div>;\n  } else {\n    return (\n      <div className=\"misc-style\">\n        <h2>Register your account</h2>\n        <form onSubmit={fetchApi}>\n          <input\n            type=\"text\"\n            minLength=\"6\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n            required\n          />\n          <input\n            type=\"password\"\n            minLength=\"6\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n            required\n          />\n          <button type=\"submit\" className=\"btn\">\n            Submit\n          </button>\n        </form>\n        <div>\n          <label>Already have an account? </label>\n          <Link to=\"/login\">Sign in here.</Link>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Register;\n","import React from \"react\";\n\nconst Post = (props) => {\n  const { postProps } = props;\n  const { title, description, price, location, deliver } = postProps;\n\n  return (\n    <div className=\"misc-style\">\n      <h2>Post</h2>\n      <form>\n        <label>\n          Title\n          <input type=\"text\" name=\"title\" value={title} readOnly={!!title} />\n        </label>\n        <label>\n          Description\n          <input\n            type=\"text\"\n            name=\"description\"\n            value={description}\n            readOnly={!!description}\n          />\n        </label>\n        <label>\n          Price\n          <input type=\"text\" name=\"price\" value={price} readOnly={!!price} />\n        </label>\n        <label>\n          Location\n          <input\n            type=\"text\"\n            name=\"location\"\n            value={location}\n            readOnly={!!location}\n          />\n        </label>\n        <label>\n          <input\n            type=\"checkbox\"\n            name=\"deliver\"\n            checked={deliver}\n            value={deliver ? true : false}\n            disabled={!!deliver}\n          />\n          <span>Willing to Deliver?</span>\n        </label>\n      </form>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport swal from \"sweetalert\";\nimport { fetchMessage } from \"../../api\";\n\nconst Message = ({ message, setMessage, userToken, postId }) => {\n  const sendMessage = async (event) => {\n    event.preventDefault();\n\n    try {\n      const data = await fetchMessage(postId, userToken, message);\n      if (data.success === true) {\n        setMessage(\"\");\n        swal(\"Message Sent\");\n      } else {\n        swal(\"NOT sent, please try again\");\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"misc-style\">\n      <h2>Send Message</h2>\n      <form onSubmit={sendMessage}>\n        <input\n          type=\"text\"\n          placeholder=\"Type Your Message Here\"\n          value={message}\n          onChange={(event) => setMessage(event.target.value)}\n          required\n        />\n        <button type=\"submit\" className=\"btn\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Message;\n","import React, { useState } from \"react\";\nimport { fetchEditPost, fetchDelete, fetchPosts } from \"../../api\";\nimport swal from \"sweetalert\";\n\nconst EditPost = (props) => {\n  const { postId, post, setPosts, loggedIn, userToken } = props;\n  const [title, setTitle] = useState(post.title);\n  const [description, setDescription] = useState(post.description);\n  const [price, setPrice] = useState(post.price);\n  const [location, setLocation] = useState(post.location);\n  const [deliver, setDeliver] = useState(post.willDeliver);\n\n  async function handleSave(e) {\n    e.preventDefault();\n\n    try {\n      await fetchEditPost(\n        postId,\n        userToken,\n        title,\n        description,\n        price,\n        location,\n        deliver\n      );\n      swal(\"Sucessfully Edited Post\");\n      try {\n        Promise.all([fetchPosts()]).then(([data]) => {\n          setPosts(data.posts);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } catch (error) {\n      console.error(error);\n      swal(\"Failed to Edit Post\");\n    }\n  }\n\n  async function handleDelete(e) {\n    e.preventDefault();\n    try {\n      await fetchDelete(postId, userToken);\n      swal(\"Post successfully Deleted\");\n      //fetch new posts from the api\n      try {\n        Promise.all([fetchPosts()]).then(([data]) => {\n          setPosts(data.posts);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } catch (error) {\n      console.error(error);\n      swal(\"Failed to Delete Post\");\n    }\n  }\n  return (\n    loggedIn && (\n      <div className=\"misc-style\">\n        <h2>Edit Post</h2>\n        <form>\n          <lable\n            style={{ color: \"#3f51b5\", fontStyle: \"bold\", fontWeight: 500 }}\n          >\n            Title\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n            />\n          </lable>\n          <lable\n            style={{ color: \"#3f51b5\", fontStyle: \"bold\", fontWeight: 500 }}\n          >\n            Description\n            <input\n              type=\"text\"\n              name=\"description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n          </lable>\n          <lable\n            style={{ color: \"#3f51b5\", fontStyle: \"bold\", fontWeight: 500 }}\n          >\n            Price\n            <input\n              type=\"text\"\n              name=\"price\"\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n            />\n          </lable>\n          <lable\n            style={{ color: \"#3f51b5\", fontStyle: \"bold\", fontWeight: 500 }}\n          >\n            Location\n            <input\n              type=\"text\"\n              name=\"location\"\n              value={location}\n              onChange={(e) => setLocation(e.target.value)}\n            />\n          </lable>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"deliver\"\n              value={deliver}\n              onChange={(e) => setDeliver(e.target.value.trim())}\n            />\n            <span\n              style={{\n                color: \"#3f51b5\",\n                paddingLeft: \"10px\",\n                fontWeight: \"500\",\n              }}\n            >\n              Willing to Deliver?\n            </span>\n          </label>\n          <div style={{ marginTop: \"10px\" }}>\n            <button onClick={handleSave}>Save</button>\n            <span style={{ marginLeft: \"5px\" }}>\n              <button onClick={handleDelete}>Delete</button>\n            </span>\n          </div>\n        </form>\n      </div>\n    )\n  );\n};\n\nexport default EditPost;\n","import React, { useState } from \"react\";\nimport AddPost from \"../Posts/AddPost\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    maxWidth: \"75%\",\n    margin: \"auto\",\n    display: \"flex\",\n    paddingTop: \"100px\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"75%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nexport default function AppBarWithSearch({\n  posts,\n  setPosts,\n  loggedIn,\n  searchTerm,\n  setSearchTerm,\n  userToken,\n}) {\n  const classes = useStyles();\n  const [state, setState] = useState({\n    top: false,\n  });\n  //const { loggedIn, userToken, setPosts, posts } = props;\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  return (\n    <div className={classes.appBar}>\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            POSTS\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n              value={searchTerm}\n              onChange={(event) => setSearchTerm(event.target.value)}\n            />\n          </div>\n          {loggedIn && (\n            <Button\n              onClick={toggleDrawer(\"top\", true)}\n              style={{ color: \"white\" }}\n            >\n              Add Post\n            </Button>\n          )}\n\n          <Drawer\n            anchor={\"top\"}\n            open={state[\"top\"]}\n            onClose={toggleDrawer(\"top\", false)}\n          >\n            <AddPost\n              loggedIn={loggedIn}\n              userToken={userToken}\n              setPosts={setPosts}\n              posts={posts}\n            />\n          </Drawer>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { fetchPosts } from \"../../api\";\nimport Post from \"./Post\";\nimport Message from \"./Message\";\nimport EditPost from \"./EditPost\";\nimport AppBarWithSearch from \"../helpers/AppBarWithSearch\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Button from \"@material-ui/core/Button\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nconst useStyles = makeStyles((theme) => ({\n  postsWrapper: {\n    display: \"flex\",\n  },\n  root: {\n    maxWidth: \"75%\",\n    margin: \"auto\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  icon: {\n    verticalAlign: \"bottom\",\n    height: 20,\n    width: 20,\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n}));\n\nconst ViewPosts = (props) => {\n  const [posts, setPosts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const classes = useStyles();\n  const [state, setState] = useState({\n    top: false,\n  });\n  const [messageState, setMessageState] = useState({\n    top: false,\n  });\n\n  const { userToken, loggedIn, message, setMessage, username } = props;\n\n  useEffect(() => {\n    try {\n      Promise.all([fetchPosts()]).then(([data]) => {\n        setPosts(data.posts);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const toggleViewPost = (anchor, open) => (event) => {\n    setState({ ...state, [anchor]: open });\n  };\n\n  const toggleMessageDrawer = (anchor, open) => (event) => {\n    setMessageState({ ...messageState, [anchor]: open });\n  };\n\n  const postMatches = (post, text) => {\n    const lowerCaseText = text.toLowerCase();\n    const author = post.author.username.toLowerCase();\n    const description = post.description.toLowerCase();\n    const location = post.location.toLowerCase();\n    const title = post.title.toLowerCase();\n    if (\n      author.includes(lowerCaseText) ||\n      description.includes(lowerCaseText) ||\n      location.includes(lowerCaseText) ||\n      title.includes(lowerCaseText)\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const filteredPosts = posts.filter((post) => postMatches(post, searchTerm));\n  const displayPosts = searchTerm ? filteredPosts : posts;\n\n  return (\n    <div>\n      <AppBarWithSearch\n        posts={posts}\n        setPosts={setPosts}\n        searchTerm={searchTerm}\n        setSearchTerm={setSearchTerm}\n        loggedIn={loggedIn}\n        userToken={userToken}\n      />\n      <div className={classes.root}>\n        {displayPosts.map((post, index) => {\n          return (\n            <Accordion key={index}>\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <div>{post.title}</div>\n                <div>{post.description}</div>\n              </AccordionSummary>\n              <AccordionDetails>\n                Price: {post.price}\n                <br />\n                Delivery: {post.willDeliver ? \"Available\" : \"Not Available\"}\n                <br />\n                Location: {post.location}\n              </AccordionDetails>\n              {loggedIn && username !== post.author.username ? (\n                <>\n                  <Button onClick={toggleMessageDrawer(post._id, true)}>\n                    Send Message\n                  </Button>\n                  <Drawer\n                    anchor={\"top\"}\n                    open={messageState[post._id]}\n                    onClose={toggleMessageDrawer(post._id, false)}\n                  >\n                    <Message\n                      key={post._id}\n                      userToken={userToken}\n                      loggedIn={loggedIn}\n                      message={message}\n                      setMessage={setMessage}\n                      postId={post._id}\n                    />\n                  </Drawer>\n                </>\n              ) : null}\n              <Button onClick={toggleViewPost(post._id, true)}>\n                View Post\n              </Button>\n              <Drawer\n                anchor={\"top\"}\n                open={state[post._id]}\n                onClose={toggleViewPost(post._id, false)}\n              >\n                <div>\n                  {username === post.author.username ? (\n                    <EditPost\n                      postId={post._id}\n                      post={post}\n                      posts={posts}\n                      setPosts={setPosts}\n                      loggedIn={loggedIn}\n                      userToken={userToken}\n                    />\n                  ) : (\n                    <Post\n                      postId={post._id}\n                      post={post}\n                      setPosts={setPosts}\n                      posts={posts}\n                    />\n                  )}\n                </div>\n              </Drawer>\n            </Accordion>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ViewPosts;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionActions from \"@material-ui/core/AccordionActions\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Message from \"../Posts/Message\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  items: {\n    borderRadius: \"10px\",\n    marginBottom: \"10px\",\n    backgroundColor: \"#e6ebff\",\n  },\n\n  expandedPanel: {\n    backgroundColor: theme.palette.primary.main,\n    color: \"white !important\",\n  },\n}));\n\nexport default function SimpleTabs({\n  message,\n  myMessages,\n  setMessage,\n  username,\n  userToken,\n}) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const [state, setState] = useState({\n    top: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div\n      className={classes.root}\n      style={{\n        paddingTop: \"100px\",\n        width: \"75%\",\n        margin: \"auto\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <AppBar position=\"relative\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n          indicatorColor=\"primary\"\n        >\n          <Tab label=\"Messages from me\" />\n          <Tab label=\"Messages to me\" />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0} className=\"\">\n        {myMessages.map((messages) => {\n          if (messages.fromUser.username === username) {\n            return (\n              <Accordion key={messages._id} className={classes.items}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1c-content\"\n                  id=\"panel1c-header\"\n                  classes={{ expanded: classes.expandedPanel }}\n                >\n                  <div>\n                    <Typography className={classes.heading}>\n                      <strong>Sent by me:</strong> {messages.fromUser.username}\n                    </Typography>\n                  </div>\n                </AccordionSummary>\n                <AccordionDetails className={classes.details}>\n                  <div className={classes.content}>\n                    <div>\n                      <Typography variant=\"content\">\n                        <strong>Message:</strong> {messages.content}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Typography variant=\"caption\">\n                        <strong>Post:</strong>\n                        {messages.post.title}\n                      </Typography>\n                    </div>\n                  </div>\n                </AccordionDetails>\n                <Divider />\n              </Accordion>\n            );\n          } else {\n            return null;\n          }\n        })}\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        {myMessages.map((messages) => {\n          if (messages.fromUser.username !== username) {\n            return (\n              <Accordion key={messages._id} className={classes.items}>\n                <AccordionSummary\n                  expandIcon={<ExpandMoreIcon />}\n                  aria-controls=\"panel1c-content\"\n                  id=\"panel1c-header\"\n                >\n                  <div>\n                    <Typography className={classes.heading}>\n                      <strong>From:</strong> {messages.fromUser.username}\n                    </Typography>\n                  </div>\n                </AccordionSummary>\n                <AccordionDetails className={classes.details}>\n                  <div className={classes.content}>\n                    <div>\n                      <Typography variant=\"content\">\n                        <strong>Message:</strong> {messages.content}\n                      </Typography>\n                    </div>\n                    <div>\n                      <Typography variant=\"caption\">\n                        <strong>Post:</strong>\n                        {messages.post.title}\n                      </Typography>\n                    </div>\n                  </div>\n                </AccordionDetails>\n                <AccordionActions>\n                  <Button\n                    size=\"small\"\n                    style={{ color: \"white\" }}\n                    onClick={toggleDrawer(messages.post._id, true)}\n                  >\n                    Send Message\n                  </Button>\n                  <Drawer\n                    anchor={\"top\"}\n                    open={state[messages.post._id]}\n                    onClose={toggleDrawer(messages.post._id, false)}\n                  >\n                    <Message\n                      key={messages.post._id}\n                      userToken={userToken}\n                      message={message}\n                      setMessage={setMessage}\n                      postId={messages.post._id}\n                    />\n                  </Drawer>\n                </AccordionActions>\n                <Divider />\n              </Accordion>\n            );\n          } else {\n            return null;\n          }\n        })}\n      </TabPanel>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport SimpleTabs from \"../components/helpers/ProfileTab\";\n\nconst Profile = ({\n  message,\n  setMessage,\n  userToken,\n  username,\n  myMessages,\n  setMyMessages,\n  myPosts,\n  setMyPosts,\n}) => {\n  useEffect(() => {\n    const fetchProfile = async () => {\n      try {\n        const response = await fetch(\n          `https://strangers-things.herokuapp.com/api/2301-FTB-PT-WEB-PT/users/me`,\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${userToken}`,\n            },\n          }\n        );\n        const data = await response.json();\n\n        setMyMessages(data.data.messages);\n        setMyPosts(data.data.posts);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchProfile();\n  }, [userToken]);\n\n  return (\n    <div>\n      <SimpleTabs\n        myMessages={myMessages}\n        username={username}\n        message={message}\n        setMessage={setMessage}\n        userToken={userToken}\n      />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  Header,\n  Login,\n  Register,\n  Home,\n  ViewPosts,\n  Profile,\n} from \"./components\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nconst App = () => {\n  const loginKey = localStorage.getItem(`Token`);\n  const userNameKey = localStorage.getItem(`Username`);\n  const [username, setUsername] = useState(userNameKey ? userNameKey : \"\");\n  const [password, setPassword] = useState(\"\");\n  const [userToken, setUserToken] = useState(loginKey ? loginKey : false);\n  const [loggedIn, setLoggedIn] = useState(loginKey ? true : false);\n  const [message, setMessage] = useState(\"\");\n  const [myMessages, setMyMessages] = useState([]);\n  const [myPosts, setMyPosts] = useState([]);\n\n  return (\n    <div className=\"app\">\n      <Router>\n        <Header\n          setUsername={setUsername}\n          setPassword={setPassword}\n          loggedIn={loggedIn}\n          setLoggedIn={setLoggedIn}\n        />\n        <Switch>\n          <Route\n            path=\"/login\"\n            render={(props) => (\n              <Login\n                {...props}\n                username={username}\n                setUsername={setUsername}\n                password={password}\n                setPassword={setPassword}\n                userToken={userToken}\n                setUserToken={setUserToken}\n                loggedIn={loggedIn}\n                setLoggedIn={setLoggedIn}\n              />\n            )}\n          />\n          <Route\n            path=\"/register\"\n            render={() => (\n              <Register\n                username={username}\n                setUsername={setUsername}\n                password={password}\n                setPassword={setPassword}\n                userToken={userToken}\n                setUserToken={setUserToken}\n                loggedIn={loggedIn}\n                setLoggedIn={setLoggedIn}\n              />\n            )}\n          />\n          <Route\n            path=\"/profile\"\n            render={(props) => (\n              <Profile\n                {...props}\n                username={username}\n                userToken={userToken}\n                message={message}\n                setMessage={setMessage}\n                myMessages={myMessages}\n                setMyMessages={setMyMessages}\n                myPosts={myPosts}\n                setMyPosts={setMyPosts}\n              />\n            )}\n          />\n          <Route\n            path=\"/posts\"\n            render={() => (\n              <ViewPosts\n                loggedIn={loggedIn}\n                userToken={userToken}\n                username={username}\n                message={message}\n                setMessage={setMessage}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/\"\n            render={() => <Home username={username} loggedIn={loggedIn} />}\n          />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"app\")\n);\n"],"sourceRoot":""}